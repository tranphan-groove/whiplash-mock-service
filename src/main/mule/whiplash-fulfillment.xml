<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<flow name="whiplash-fulfillment-flow" doc:id="be167a5c-2bea-4855-8b1d-df40e28c9cb2">
		<scheduler doc:name="Scheduler" doc:id="ce1ce57a-0ac6-41ef-9e4f-c0ee1912c1cb">
			<scheduling-strategy >
				<cron expression="${outbound.fulfillment.scheduler.frequency}" />
			</scheduling-strategy>
		</scheduler>
		<choice doc:name="Choice" doc:id="873f2fe7-d745-4c4e-a363-9c88a27cb850" >
			<when expression="#[p('outbound.fulfillment.enabled') == 'true']">
				<db:select doc:name="Select" doc:id="b06d9619-15bd-4477-a774-c3943ea0fc8d" config-ref="Database_Config" maxRows="#[p('outbound.fulfillment.db.limit')]">
					<db:sql ><![CDATA[SELECT data FROM wmsmock_wpl_sales_orders WHERE TIMESTAMPDIFF(SECOND, created_at, now()) > :fulfillmentTimeDiff AND fulfillment_in_sync = 0]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	fulfillmentTimeDiff: p('outbound.fulfillment.db.timeDiff')
}]]]></db:input-parameters>
				</db:select>
				<ee:transform doc:name="Transform Message" doc:id="488e848f-1baf-49e8-becc-73e0e79d19f3">
						<ee:message>
							<ee:set-payload resource="dw/transformations/wpl-convert-order-to-json.dwl" />
						</ee:message>
					</ee:transform>
				<logger level="DEBUG" doc:name="DEBUG: AFTER_REQUEST" doc:id="2fda56b3-3c5d-4d9f-ae1a-57d362fed1bd" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = tracePoint ++ &quot;: Whiplash has retrieved orders for fulfillment&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, null, attributes)]" category="ck-support-debug-monitoring"/>
				<foreach doc:name="For Each" doc:id="25274830-16bc-41d6-a014-fd0375fb2236">
					<flow-ref doc:name="Flow whiplash-each-fulfillment-flow" doc:id="f819b51b-d223-45df-acf2-fafe057f0484" name="whiplash-each-fulfillment-flow"/>
				</foreach>
				<choice doc:name="Choice" doc:id="b4bed9a7-4345-4405-8d6c-51f0196bab75">
					<when expression="#[!isEmpty(vars.successOrders)]">
						<db:bulk-update doc:name="Bulk update" doc:id="0460a5ff-0767-47ed-af3b-ca724381e262" config-ref="Database_Config" target="dbRes">
					<db:bulk-input-parameters><![CDATA[#[vars.successOrders]]]></db:bulk-input-parameters>
					<db:sql><![CDATA[UPDATE wmsmock_wpl_sales_orders SET fulfillment_in_sync = 1 WHERE JSON_EXTRACT(data, "$.order_orig") = :order_orig]]></db:sql>
				</db:bulk-update>
						<logger level="DEBUG" doc:name="DEBUG: AFTER_REQUEST" doc:id="e5409caa-f1dc-4e42-8875-d3c799240507" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = tracePoint ++ &quot;: Whiplash has updated orders fulfillment_in_sync after fulfillment&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, null, null, correlationId, null, attributes)]" category="ck-support-debug-monitoring" />
						<logger level="INFO" doc:name="INFO: END" doc:id="b396d766-7769-43f4-9d01-c5d640afca74" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.end')&#10;var logMessage = tracePoint ++ &quot;: Whiplash has sent a batch of fulfillment requests&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.successOrders, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-info-monitoring" />
					</when>
				</choice>
			</when>
		</choice>
	</flow>
	<flow name="whiplash-each-fulfillment-flow" doc:id="d240af54-39e7-4046-870f-53f452059cc5" >
		<ee:transform doc:name="Set Variable - correlationId" doc:id="4aa3e86c-e591-4b3a-bbb7-f96b70d44b5f">
			<ee:message />
			<ee:variables>
				<ee:set-variable resource="dw/variables/correlationId.dwl" variableName="correlationId" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set Variable - fulfillmentQueryParams and payload" doc:id="ecfa8590-ffcf-40a1-838d-a6882dc0dfa7">
			<ee:message>
				<ee:set-payload resource="dw/transformations/wpl-fulfillmentBody.dwl" />
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/variables/wpl-fulfillmentQueryParams.dwl" variableName="fulfillmentQueryParams" />
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="DEBUG: BEFORE_REQUEST" doc:id="f1f5c727-ea99-4c09-8687-4578f3209cf8" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.beforeRequest')&#10;var logMessage = tracePoint ++ &quot;: Whiplash is sending a fulfillment request - &quot; ++ (vars.orderNumber default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-debug-monitoring"/>
		<http:request method="POST" doc:name="Request fulfillment" doc:id="256bad2a-5015-4722-a0ee-82b27105608a" config-ref="HTTP_Request_configuration" path="/Australia/p-forders-pub/v1/api/orders" target="httpRes">
			<http:headers><![CDATA[#[output application/java
---
{
	"X-Correlation-ID" : vars.correlationId default ""
}]]]></http:headers>
			<http:query-params><![CDATA[#[vars.fulfillmentQueryParams]]]></http:query-params>
		</http:request>
		<logger level="DEBUG" doc:name="DEBUG: AFTER_REQUEST" doc:id="0b46c688-2f8e-4903-8d24-dafd0e68181b" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = tracePoint ++ &quot;: Whiplash has sent a fulfillment request - &quot; ++ (vars.orderNumber default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-debug-monitoring"/>
		<ee:transform doc:name="Set Variable - successOrders" doc:id="f7a950d8-10e6-4f93-846d-375c25e90a17" >
			<ee:message />
			<ee:variables >
				<ee:set-variable resource="dw/variables/wpl-successOrders.dwl" variableName="successOrders" />
			</ee:variables>
		</ee:transform>
		<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="66dc8c86-e95a-40f6-bb93-363b7def00bc" >
					<logger level="ERROR" doc:name="ERROR: EXCEPTION" doc:id="9b50082a-48d3-4bc2-a81e-bb0ec3c4fd32" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.error')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.exception')&#10;var logMessage = tracePoint ++ &quot;: Whiplash encountered an error while sending a fulfillment request - &quot; ++ (vars.orderNumber default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, error, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-error-monitoring"/>
				</on-error-continue>
			</error-handler>
	</flow>
</mule>
